# Generated by Django 5.1.1 on 2025-09-22 12:00

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_complet', models.CharField(max_length=200, verbose_name="Nom complet de l'employé")),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de création')),
                ('salaire_net', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Salaire net souhaité')),
                ('salaire_base', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Salaire de base calculé')),
                ('salaire_brut', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Salaire brut calculé')),
                ('salaire_imposable', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Salaire imposable calculé')),
                ('cnss_employe', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='CNSS employé (5%)')),
                ('rts', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='RTS (Retenue à la Source)')),
                ('total_charges_employee', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Total charges employé')),
                ('cnss_employeur', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='CNSS employeur (18%)')),
                ('versement_forfaitaire', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Versement forfaitaire (6%)')),
                ('taxe_apprentissage', models.DecimalField(decimal_places=2, max_digits=12, verbose_name="Taxe d'apprentissage (2%)")),
                ('total_cnss_patronal', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Total CNSS patronal')),
                ('prime_cherte_vie', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Prime de cherté de vie')),
                ('prime_craie', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Prime de craie')),
                ('indemnite_logement', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Indemnité de logement')),
                ('indemnite_transport', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Indemnité de transport')),
                ('indemnite_repas', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Indemnité de repas')),
                ('autre_gratification', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Autre gratification')),
                ('primes_taxables', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Primes taxables')),
                ('prime_retraite', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Prime de retraite')),
                ('prime_interim', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name="Prime d'intérim")),
                ('prime_anciennete', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name="Prime d'ancienneté")),
                ('primes_exonerees', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total primes exonérées')),
                ('ecart_imposable', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Écart imposable')),
            ],
            options={
                'verbose_name': 'Employé',
                'verbose_name_plural': 'Employés',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('must_change_password', models.BooleanField(default=True, help_text="Cochez si l'utilisateur doit changer son mot de passe à la prochaine connexion", verbose_name='Doit changer le mot de passe')),
                ('temporary_password', models.CharField(blank=True, help_text='Mot de passe temporaire généré automatiquement', max_length=128, null=True, verbose_name='Mot de passe temporaire')),
                ('password_changed_at', models.DateTimeField(blank=True, help_text='Date de la dernière modification du mot de passe', null=True, verbose_name='Mot de passe changé le')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
        ),
    ]
